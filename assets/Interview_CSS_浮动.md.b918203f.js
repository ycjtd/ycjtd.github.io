import{_ as s,c as a,o as n,d as l}from"./app.72c7cb6e.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"为什么要清除浮动","slug":"为什么要清除浮动","link":"#为什么要清除浮动","children":[]},{"level":3,"title":"怎么清除","slug":"怎么清除","link":"#怎么清除","children":[]}],"relativePath":"Interview/CSS/浮动.md"}'),o={name:"Interview/CSS/浮动.md"},p=l(`<h3 id="为什么要清除浮动" tabindex="-1">为什么要清除浮动 <a class="header-anchor" href="#为什么要清除浮动" aria-hidden="true">#</a></h3><p>为什么要清除浮动？ 浮动元素脱离了标准文档流，变成了浮动元素，不再向父元素汇报高度。所以父元素在计算高度的时候并没有将浮动元素的高度计算出来，因此就造就了高度塌陷的问题。解决高度塌陷的问题就叫做清除浮动</p><h3 id="怎么清除" tabindex="-1">怎么清除 <a class="header-anchor" href="#怎么清除" aria-hidden="true">#</a></h3><ol><li><p>clear 属性</p><ol><li>在浮动元素后添加一个空元素，对其设置 clear：both</li><li>优点：简单、代码少，浏览器兼容性好</li><li>缺点：需要添加大量无语义的代码，代码不够优雅，后期不容易维护</li></ol></li></ol><p><strong>原理</strong>：元素的左右两侧都不允许浮动元素存在</p><ol start="2"><li>clear + 伪元素</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula-soft vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#62E884;font-style:italic;">.outer</span><span style="color:#F286C4;font-style:italic;">::</span><span style="color:#62E884;font-style:italic;">after</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">content</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">display</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">block</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">clear</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">both</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">visibility</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">hidden</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E1F1;">height</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">.outer::after</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">content</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">display</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">block</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">clear</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">both</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">visibility</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">hidden</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li><p>BFC 布局规则</p><p>给父元素添加 overflow：hidden 或 auto，触发 BFC</p></li></ol>`,8),e=[p];function t(c,r,i,y,F,d){return n(),a("div",null,e)}const C=s(o,[["render",t]]);export{h as __pageData,C as default};
